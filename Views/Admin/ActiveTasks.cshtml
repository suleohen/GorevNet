@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model List<GorevNet.Models.ViewModels.TaskDisplayViewModel>

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Aktif Görevler</h1>
    <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
        <i class="fas fa-download fa-sm text-white-50"></i> Rapor Oluştur
    </a>
</div>

<div class="card shadow mb-4">
    <!-- Card Header - Dropdown -->
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">Görev Listesi (@Model.Count)</h6>
        <div class="dropdown no-arrow">
            <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink"
               data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
            </a>
            <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in"
                 aria-labelledby="dropdownMenuLink">
                <div class="dropdown-header">Seçenekler:</div>
                <a class="dropdown-item" href="/Admin/CreateTask">
                    <i class="fas fa-plus fa-sm fa-fw mr-2 text-gray-400"></i>
                    Görev Ekle
                </a>
            </div>
        </div>
    </div>

    <!-- Card Body -->
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead class="thead-light">
                        <tr>
                            <th>Görev Adı</th>
                            <th>Durum</th>
                            <th>Öncelik</th>
                            <th>Atanan Kişi</th>
                            <th>Bitiş Tarihi</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <strong>@item.Title</strong>
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        <br>

                                        <small class="text-muted">@(item.Description.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)</small>
                                    }
                                </td>
                                <td>
                                    @{
                                        string statusClass = item.Status switch
                                        {
                                            GorevNet.Models.TaskStatus.Tamamlandı => "badge-success",
                                            GorevNet.Models.TaskStatus.DevamEdiyor => "badge-warning",
                                            GorevNet.Models.TaskStatus.Beklemede => "badge-info",
                                            _ => "badge-secondary"
                                        };
                                    }
                                    <span class="badge @statusClass">@item.StatusDisplay</span>
                                </td>
                                <td>
                                    @{
                                        string priorityClass = item.Priority switch
                                        {
                                            GorevNet.Models.TaskPriority.Yüksek => "badge-danger",
                                            GorevNet.Models.TaskPriority.Normal => "badge-primary",
                                            GorevNet.Models.TaskPriority.Düşük => "badge-secondary",
                                            _ => "badge-secondary"
                                        };
                                    }
                                    <span class="badge @priorityClass">@item.PriorityDisplay</span>
                                </td>
                                <td>
                                    <i class="fas fa-user fa-sm text-gray-400 mr-1"></i>
                                    <strong>@item.AssignedUserName</strong>
                                </td>
                                <td>
                                    @if (item.DueDate.HasValue)
                                    {
                                        var daysLeft = (item.DueDate.Value - DateTime.Now).Days;
                                        if (daysLeft < 0)
                                        {
                                            <span class="text-danger">
                                                <i class="fas fa-exclamation-triangle"></i>
                                                @item.DueDate.Value.ToString("dd/MM/yyyy")
                                                <br><small>(@Math.Abs(daysLeft) gün gecikti)</small>
                                            </span>
                                        }
                                        else if (daysLeft <= 2)
                                        {
                                            <span class="text-warning">
                                                <i class="fas fa-clock"></i>
                                                @item.DueDate.Value.ToString("dd/MM/yyyy")
                                                <br><small>(@daysLeft gün kaldı)</small>
                                            </span>
                                        }
                                        else
                                        {
                                            <span>@item.DueDate.Value.ToString("dd/MM/yyyy")</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a href="/Admin/TaskDetails/@item.Id" class="btn btn-sm btn-primary" data-toggle="tooltip" title="İncele">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a href="/Admin/EditTask?id=@item.Id" class="btn btn-sm btn-warning" data-toggle="tooltip" title="Düzenle">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-danger"
                                                onclick="deleteTask(@item.Id, '@item.Title')"
                                                data-toggle="tooltip" title="Sil">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-inbox fa-3x text-gray-300 mb-3"></i>
                <h5 class="text-gray-500">Henüz görev bulunmuyor</h5>
                <p class="text-gray-400">Yeni görev eklemek için yukarıdaki menüyü kullanın.</p>
                <a href="/Admin/CreateTask" class="btn btn-primary">
                    <i class="fas fa-plus mr-2"></i>İlk Görevi Oluştur
                </a>
            </div>
        }
    </div>
</div>

<!-- Task Delete Form (CSRF Token için) -->
<form id="deleteForm" style="display: none;" method="post">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        // DataTable initialization
        $(document).ready(function () {
            $('#dataTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Turkish.json"
                },
                "order": [[0, "asc"]],
                "pageLength": 25
            });

            // Tooltip initialization
            $('[data-toggle="tooltip"]').tooltip();
        });

        // Task silme fonksiyonu
        function deleteTask(taskId, taskTitle) {
            Swal.fire({
                title: 'Görevi Sil',
                text: `"${taskTitle}" görevini silmek istediğinizden emin misiniz?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Evet, Sil!',
                cancelButtonText: 'İptal'
            }).then((result) => {
                if (result.isConfirmed) {
                    // AJAX ile silme işlemi
                    $.ajax({
                        url: '/Admin/DeleteTask',
                        type: 'POST',
                        data: {
                            id: taskId,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire(
                                    'Silindi!',
                                    response.message,
                                    'success'
                                ).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Hata!',
                                    response.message,
                                    'error'
                                );
                            }
                        },
                        error: function () {
                            Swal.fire(
                                'Hata!',
                                'Silme işlemi sırasında bir hata oluştu.',
                                'error'
                            );
                        }
                    });
                }
            });
        }
    </script>
}